{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string"
    },
    "clusterResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "clusterLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "symphonyName": {
      "type": "string",
      "defaultValue": "symphony"
    },
    "installNamespace": {
      "type": "string",
      "defaultValue": "symphony"
    },
    "targetName": {
      "type": "string",
      "defaultValue": "self"
    },
    "customLocationName": {
      "type": "string",
      "defaultValue": "symphony-custom-location"
    },
    "customLocationNamespace": {
      "type": "string"
    }
  },
  "variables": {
    "customLocationName": "[parameters('customLocationName')]",
    "clusterId": "[resourceId('Microsoft.Kubernetes/connectedClusters', parameters('clusterName'))]",
    "syncRuleName": "[concat(parameters('symphonyName'), '-sync')]"
  },
  "resources": [
    {
      "type": "Microsoft.KubernetesConfiguration/extensions",
      "apiVersion": "2022-03-01",
      "name": "[parameters('symphonyName')]",
      "location": "[parameters('clusterLocation')]",
      "properties": {
        "extensionType": "private.symphony",
        "autoUpgradeMinorVersion": true,
        "scope": {
          "cluster": {
            "releaseNamespace": "[parameters('installNamespace')]"
          }
        },
        "version": "0.43.11",
        "releaseTrain": "dev",
        "configurationSettings": {
          "Microsoft.CustomLocation.ServiceAccount": "default"
        }
      },
      "scope":   "[concat('Microsoft.Kubernetes/connectedClusters/', parameters('clusterName'))]"
    },
    {
      "type": "Microsoft.ExtendedLocation/customLocations",
      "apiVersion": "2021-08-31-preview",
      "name": "[variables('customLocationName')]",
      "location": "[parameters('clusterLocation')]",
      "properties": {
        "hostResourceId": "[variables('clusterId')]",
        "namespace": "[parameters('customLocationNamespace')]",
        "displayName": "[variables('customLocationName')]",
        "clusterExtensionIds": [
          "[concat(variables('clusterId'), '/providers/Microsoft.KubernetesConfiguration/extensions/', parameters('symphonyName'))]"
        ]
      },
      "dependsOn": [
        "[parameters('symphonyName')]"
      ]
    },
    {
      "type": "private.symphony/targets",
      "name": "[parameters('targetName')]",
      "location": "[parameters('clusterLocation')]",
      "apiVersion": "2020-01-01-preview",
      "extendedLocation": {
        "name": "[resourceId('Microsoft.ExtendedLocation/customLocations', variables('customLocationName'))]",
        "type": "CustomLocation"
      },
      "properties": {
        "topologies": [
          {
            "bindings": [
              {
                "role": "instance",
                "provider": "providers.target.k8s",
                "config": {
                  "inCluster": "true"
                }
              },
              {
                "role": "helm.v3",
                "provider": "providers.target.helm",
                "config": {
                  "inCluster": "true"
                }
              },
              {
                "role": "yaml.k8s",
                "provider": "providers.target.kubectl",
                "config": {
                  "inCluster": "true"
                }
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[variables('customLocationName')]"
      ]
    },
    {
      "type": "Microsoft.ExtendedLocation/customLocations/resourceSyncRules",
      "apiVersion": "2021-08-31-preview",
      "name": "[concat(variables('customLocationName'), '/', variables('syncRuleName'))]",
      "location": "[parameters('clusterLocation')]",
      "properties": {
        "priority": 100,
        "selector": {
          "matchLabels": {
            "management.azure.com/provider-name": "private.symphony"
          }
        },
        "targetResourceGroup": "[resourceGroup().id]"
      },
      "dependsOn": [
        "[variables('customLocationName')]"
      ]
    }
  ]
}